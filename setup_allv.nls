;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                           SETUP PROCEDURES                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; procédure d'initialisation des variables globales
to setup-globals
  ; variables fixées par les sliders :
  set nb_of_persons number_of_persons ; = labor force
  set nb_of_companies number_of_companies
  set nb_of_pairs_considered round ( (number_of_pairs_considered / 100 ) * (nb_of_persons + nb_of_companies) )
  set nb_of_locations_possibles number_of_locations_possibles
  set min_salary minimum_salary
  set max_salary maximum_salary
  set minimum_similarity_required matching_quality_threshold
  set minimum_productivity_required firing_quality_threshold
  set exceptional_firing unexpected_firing
  set exceptional_company_motivation unexpected_company_motivation
  set exceptional_worker_motivation unexpected_worker_motivation
  set nb_of_field_possibles number_of_fields_possibles
  set maximum_productivity_fluctuation max_productivity_fluctuation
  set maximum_statisfaction_fluctuation max_satisfaction_fluctuation
  set exceptional_motivation_event exceptional_motivation_chances
  set strong_matching_threshold exceptional_matching
  set random_resigning_threshold random_resigning_chances
  set fraction_of_applicants fraction_of_applying_persons
  set life_expectancy age_of_retirement
  set birth_rate renewal_rate
  set initial_nb_of_persons number_of_persons
  
  ; autres variables 
  set timeout 1000
  
  set color-person-employed 67
  set color-person-unemployed 17
  set color-company-filled-job 63
  set color-company-vacant-job 17
  
  set convergence False
  set last-values-unemployement []
  set nb-of-step-remembered 100 ; nombres de resultats stockés pour le calcul de la convergence
  set convergence-margin converge-criteria ;
  set nb-failed-matching 0
  set last-values-indic2 []
  set last-values-indic3 []
  set last-values-indic4 []
  set last-values-indic5 []
  set indic-2 0
  set indic-3 0
  set indic-4 0
  set indic-5 0
end




; procédure d'initialisation de l'agent MATCHING
to setup-matching-agent
  set-default-shape matching "square 2"
  create-matching 1 [
    set color white
    set size 2
    setxy 0 0
  ]
end

; procédure d'initialisation des agents PERSON
to setup-persons
  set-default-shape persons "person"
  set-default-shape companies "house"
  create-persons nb_of_persons [
    set color color-person-unemployed
    set size 2
    set-random-skills-location-salary
    set-productivity
    set-satisfaction-required
    set-initial-specialization
    set experience 0
    set employed False
    set employer nobody
    set job-time 0
    set unemployement-time 0
    set strong-matching false
    set-age
    set-xy
  ]
end

; procédure d'initialisation des agents COMPANY
to setup-companies
  create-companies nb_of_companies [
    set color color-company-vacant-job
    set size 2
    set-random-skills-location-salary
    set-random-field
    set-satisfaction
    set experience_required 0
    set job_filled False
    set employee nobody
    set vacant-time 0
    set strong-matching false
    set-xy
  ]
end

; procédure qui fixe au hasard les valeurs de compétences, lieu et salaires pour chaque agent (PERSON et COMPANY)
to set-random-skills-location-salary
  set skills (list random 2 random 2 random 2 random 2 random 2)
  set location random nb_of_locations_possibles
  set salary minimum_salary + random (max_salary - min_salary)
end

; procédure qui fixe la valeur de référence de la productivité de l'employé, au hasard selon une loi normale (pour ne pas avoir de valeurs trop extrèmes)
to set-productivity
  set reference_productivity random-normal 0.7 0.3  
  if reference_productivity < 0 [
    set reference_productivity 0
  ]
  if reference_productivity > 1 [
    set reference_productivity 1
  ]
end

; procédure qui fixe la valeur de satisfaction au travail exigée par une personne, au hasard selon une loi normale
to set-satisfaction-required
  set minimum_satisfaction_required random-normal 0.5 0.3
  if minimum_satisfaction_required < 0 [
    set minimum_satisfaction_required 0
  ]
  if minimum_satisfaction_required > 1 [
    set minimum_satisfaction_required 1
  ]
end

; procédure qui fixe la valeur de référence de la productivité de l'employé, au hasard selon une loi normale
to set-satisfaction
  set reference_satisfaction random-normal 0.7 0.3
  
  if reference_satisfaction < 0 [
    set reference_satisfaction 0
  ]
  if reference_satisfaction > 1 [
    set reference_satisfaction 1
  ]
end

; procédure qui fixe l'âge d'un agent, au hasard entre 0 et l'âge de la retraite
to set-age
  set age random life_expectancy
end

; procédure qui fixe le domaine de l'entreprise, au hasard entre 0 et nb_of_field_possibles
to set-random-field
  set field random nb_of_field_possibles
end

; procédure qui initialise la spécialisation d'un employé (au début un employé n'est spécialisé dans aucun domaine et specialization est donc une liste nulle)
to set-initial-specialization
  set specialization n-values nb_of_field_possibles [0]
end

; procédure qui réitilialise des sliders à leurs valeurs par défaut
to reset-globals
  set number_of_persons 400
  set number_of_companies 400
  set number_of_pairs_considered 30
  set number_of_locations_possibles 3
  set minimum_salary 500
  set maximum_salary 3000
  set matching_quality_threshold 0.5
  set firing_quality_threshold 0.5
  set unexpected_firing 0.1
  set unexpected_company_motivation 0.1
  set unexpected_worker_motivation 0.1
  set max_productivity_fluctuation 0.3
  set max_satisfaction_fluctuation 0.3
  set number_of_fields_possibles 5
  set random_resigning_chances 0.2
  set display_bc false
  set nb_of_U_points 4
  set nb_of_V_points 4
  set U_min 100
  set V_min 100
  set U_max 400
  set V_max 400
  set exceptional_motivation_chances 0.1
  set exceptional_matching 1
  set timeout 1000
  set converge-criteria 0.05
  set unexpected_firing 0.1
  set fraction_of_applying_persons 0.
  set age_of_retirement 60
  set renewal_rate 0.02
end

